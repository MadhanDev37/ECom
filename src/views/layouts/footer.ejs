<div class="log-modal">

    <div class="login-modal" id="login-modal">
      <div class="login-modal-backdrop">
        <div class="login-modal-left">
          <div class="login-modal-img">
            <img src="/images/userlogin.avif" alt="" srcset="">
  
          </div>
          <p class="signup-text active">Don’t have an account? <span id="signup">Sign Up</span></p>
          <p class="login-text">Already have an account? <span id="login">Login</span></p>
        </div>
        <div class="login-modal-right">
          <span id="modal-close-icon"></span>
          <div class="login-container active">
            <div class="login-modal-content">
              <div class="login-modal-header">
                <h3>LOGIN</h3>
              </div>
              <div class="login-modal-body">
                <form class="form" id="login-form">
                  <div class="login-form-group">
                    <input type="text" placeholder="" id="email" name="email">
                    <label for="email">Email</label>
                    <span></span>
                  </div>
                  <div class="login-form-group">
                    <input type="password" placeholder="" id="password" name="password">
                    <label for="password">Password</label>
                    <div id="togglePassword">
                      <img src="/images/eye-fill.svg" alt="eye-fill" class="eye-fill active" >
                      <img src="/images/eye-slash-fill.svg" alt="eye-slash-fill" class="eye-slash-fill" >
                    </div>
                    <span></span>
                  </div>
                  <div class="login-form-group-btn">
                    <button class="btn btn-outline-info w-100" id="login-btn" type="submit">Login</button>
                  </div>
                  <span class="errorMessage"></span>
                  <span class="successMessage"></span>
                </form>
              </div>
            </div>
  
          </div>
          <div class="signup-container">
            <div class="signup-modal-content">
              <div class="signup-modal-header">
                <h3>SIGNUP</h3>
              </div>
              <div class="signup-modal-body">
                <form class="form" id="signup-form">
                  <div class="signup-form-group">
                    <input type="text" placeholder="" id="username" name="username">
                    <label for="username">Username</label>
                    <span></span>
                  </div>
                  <div class="signup-form-group">
                    <input type="text" placeholder="" id="signemail" name="signemail">
                    <label for="email">Email</label>
                    <span></span>
                  </div>
                  <div class="signup-form-group">
                    <input type="password" placeholder="" id="signpassword" name="signpassword">
                    <label for="password">Password</label>
                    <div id="togglePassword1">
                      <img src="/images/eye-fill.svg" alt="eye-fill" class="eye-fill active" >
                      <img src="/images/eye-slash-fill.svg" alt="eye-slash-fill" class="eye-slash-fill" >
                    </div>
                    <span></span>
                  </div>
                  <div class="signup-form-group">
                    <input type="password" placeholder="" id="cpassword" name="cpassword">
                    <label for="cpassword">Confirm Password</label>
                    <div id="togglePassword2">
                      <img src="/images/eye-fill.svg" alt="eye-fill" class="eye-fill active" >
                      <img src="/images/eye-slash-fill.svg" alt="eye-slash-fill" class="eye-slash-fill" >
                    </div>
                    <span></span>
                  </div>
                  <div class="signup-form-group-btn">
                    <button class="btn btn-outline-info w-100" id="signup-btn" type="submit">signup</button>
                  </div>
                  <span class="errorMessage"></span>
                  <span class="successMessage"></span>
                </form>
              </div>
            </div>
          </div>
        </div>
  
      </div>
    </div>
  </div>

<div class="footer">
  <div class="footer-top">
      <div class="footer-left">
          <div class="footer-logo">
              <img src="assets/images/logo.png" alt="" srcset="">
          </div>
          <div class="footer-text">
              <p>
                Discover, shop, and enjoy a wide selection of electronics designed for every lifestyle. Whether you're searching for the latest gadgets, trusted brands, or hard-to-find tech, Electro Cart makes it easy to find exactly what you need. Our commitment to quality and customer satisfaction ensures a seamless and reliable shopping experience every time.
              </p>
          </div>
      </div>
      <div class="footer-right">
          <p>Stay Connected</p>
          <p>Follow us for updates, recommendations, and exclusive deals.</p>
          <div class="social-icons">
              <a href=""><img src="/images/facebook.png" alt="" srcset=""></a>
              <a href=""><img src="/images/linkedin.png" alt="" srcset=""></a>
              <a href=""><img src="/images/instagram.png" alt="" srcset=""></a>
          </div>
      </div>
  </div>
  <div class="footer-bottom">
      <p>Copyright © 2025. All Rights Reserved</p>
  </div>
</div>
</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script src="https://js.stripe.com/v3/"></script>
<script src="/js/scripts.js"></script>
<script>
    const loginContainer = document.querySelector('.login-container');
    const loginModalLeft = document.querySelector('.login-modal-left');
    const signupContainer = document.querySelector('.signup-container');
    const login = document.getElementById('login');
    const signup = document.getElementById('signup');
    const loginText = document.querySelector('.login-text');
    const signupText = document.querySelector('.signup-text');
    const loginInputMsg = document.querySelectorAll('.login-form-group input');
    const loginSpanMsg = document.querySelectorAll('.login-form-group span');
    const signupInputMsg = document.querySelectorAll('.signup-form-group input');
    const signupSpanMsg = document.querySelectorAll('.signup-form-group span');
    const loginForm = document.getElementById('login-form');
    const signupForm = document.getElementById('signup-form');
    const logoutBtn = document.getElementById('logoutBtn');
  
    if (login) {
      login.addEventListener('click', () => {
        if (signupContainer.classList.contains('active')) {
          signupContainer.classList.add('animation');
          // setTimeout(()=>{
          signupContainer.classList.remove('active');
  
          loginContainer.classList.add('active');
          loginModalLeft.classList.remove('animation');
          loginContainer.classList.remove('animation');
          loginText.classList.remove('active');
          signupText.classList.add('active');
          loginSpanMsg.forEach((i) => {
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
            i.textContent = "";
          })
          loginInputMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
          })
          signupSpanMsg.forEach((i) => {
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
            i.textContent = "";
          })
          signupInputMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
          });
          signupForm.reset();
          loginForm.reset();
          logpassword.type ='password';
      password.type =  'password';
      cpassword.type =  'password';
  
  
  resetToggleIcons('togglePassword');
  resetToggleIcons('togglePassword1');
  resetToggleIcons('togglePassword2');
        }
      });
    }
  
    if (signup) {
      signup.addEventListener('click', () => {
        if (loginContainer.classList.contains('active')) {
          loginContainer.classList.add('animation');
          loginModalLeft.classList.add('animation');
          // setTimeout(()=>{
  
          loginContainer.classList.remove('active');
          signupContainer.classList.add('active');
          signupContainer.classList.add('animation');
          signupText.classList.remove('active');
          loginText.classList.add('active');
          loginSpanMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
            i.textContent = "";
          })
          loginInputMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
          })
          signupSpanMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
            i.textContent = "";
          })
          signupInputMsg.forEach((i) => {
  
            i.classList.remove('error-msg');
            i.classList.remove('success-msg');
          });
          signupForm.reset();
          loginForm.reset();
          logpassword.type ='password';
      password.type =  'password';
      cpassword.type =  'password';
  resetToggleIcons('togglePassword');
  resetToggleIcons('togglePassword1');
  resetToggleIcons('togglePassword2');
          // },200)
        }
      });
    }
    const loginModal = document.getElementById('login-modal');
    const loginModalBackdrop = document.querySelector('.login-modal-backdrop');
    const loginOpenBtn = document.querySelector('.login-open-btn');
    const modalCloseIcon = document.getElementById('modal-close-icon');
  
  
    const body = document.querySelector('body');
    if (loginOpenBtn) {
  
      loginOpenBtn.addEventListener('click', () => {
        loginModal.classList.add('active');
        body.classList.add('modal-open');
      });
    }
    if (loginOpenBtn) {
      document.addEventListener('click', (event) => {
        event.stopPropagation();
        if (!loginModalBackdrop.contains(event.target) && !loginOpenBtn.contains(event.target)) {
          formModelReset();
        }
      });
    }
    modalCloseIcon.addEventListener('click', () => {
      formModelReset();
    })
    const formModelReset = () => {
      loginModal.classList.remove('active');
      body.classList.remove('modal-open');
      loginContainer.classList.add('active');
      loginModalLeft.classList.remove('animation');
      loginContainer.classList.remove('animation');
      signupContainer.classList.remove('active');
      loginText.classList.remove('active');
      signupText.classList.add('active');
      loginSpanMsg.forEach((i) => {
        i.classList.remove('error-msg');
        i.classList.remove('success-msg');
        i.textContent = "";
      })
      loginInputMsg.forEach((i) => {
        i.classList.remove('error-msg');
        i.classList.remove('success-msg');
      })
      signupSpanMsg.forEach((i) => {
        i.classList.remove('error-msg');
        i.classList.remove('success-msg');
        i.textContent = "";
      })
      signupInputMsg.forEach((i) => {
        i.classList.remove('error-msg');
        i.classList.remove('success-msg');
      });
      signupForm.reset();
      loginForm.reset();
      logpassword.type ='password';
      password.type =  'password';
      cpassword.type =  'password';
  
  
  resetToggleIcons('togglePassword');
  resetToggleIcons('togglePassword1');
  resetToggleIcons('togglePassword2');
  
  
    }
    function resetToggleIcons(toggleButtonId) {
    const eyeFill = document.querySelector(`#${toggleButtonId} .eye-fill`);
    const eyeSlashFill = document.querySelector(`#${toggleButtonId} .eye-slash-fill`);
    
    eyeFill.classList.add('active');
    eyeSlashFill.classList.remove('active');
  }
    loginModalBackdrop.addEventListener('click', (event) => {
      event.stopPropagation();
    });
  
    // validation for login form
  
    const loginBtn = document.getElementById('login-btn');
    const signupBtn = document.getElementById('signup-btn');
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
  
    const logemail = document.getElementById('email');
    const logpassword = document.getElementById('password');
  
    loginForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const emailValue = logemail.value.trim();
      const passwordValue = logpassword.value.trim();
  
  
  
      let valid = true;
      if (emailValue === "") {
        setError(logemail, "Email Field is required", '.login-form-group');
        valid = false;
      } else if (!emailRegex.test(emailValue)) {
        setError(logemail, "Email is invalid", '.login-form-group');
        valid = false;
      } else {
        setSuccess(logemail, '.login-form-group');
      }
      if (passwordValue === "") {
        setError(logpassword, "Password Field is required", '.login-form-group');
        valid = false;
      } else {
        setSuccess(logpassword, '.login-form-group')
      }
      if (valid) {
        const formData = {
          email: emailValue,
          password: passwordValue
        }
        loginFormSubmit(formData);
        // loginForm.reset();
      }
    });
    const username = document.getElementById('username');
      const email = document.getElementById('signemail');
      const password = document.getElementById('signpassword');
      const cpassword = document.getElementById('cpassword');
    signupForm.addEventListener('submit', (e) => {
      e.preventDefault();
  
      const usernameValue = username.value.trim();
      const emailValue = email.value.trim();
      const passwordValue = password.value.trim();
      const cpasswordValue = cpassword.value.trim();
  
  
  
      let valid = true;
      if (usernameValue === "") {
        setError(username, "Username Field is required", '.signup-form-group');
        valid = false;
      } else {
        setSuccess(username, '.signup-form-group');
      }
      if (emailValue === "") {
        setError(email, "Email Field is required", '.signup-form-group');
        valid = false;
      } else if (!emailRegex.test(emailValue)) {
        setError(email, "Email is invalid", '.signup-form-group');
        valid = false;
      } else {
        setSuccess(email, '.signup-form-group');
      }
      if (passwordValue === "") {
        setError(password, "Password Field is required", '.signup-form-group');
        valid = false;
      }
       else if (!passwordRegex.test(passwordValue)) {
        setError(password, "Password needs stronger criteria.", '.signup-form-group');
        valid = false;
      } 
      else {
        setSuccess(password, '.signup-form-group')
      }
      if (cpasswordValue === "") {
        setError(cpassword, "Confirm Password Field is required", '.signup-form-group');
        valid = false;
      } else if (cpasswordValue !== passwordValue) {
        setError(cpassword, "Password does not match the entered password", '.signup-form-group');
        valid = false;
      } else {
        setSuccess(cpassword, '.signup-form-group')
      }
      if (valid) {
        // console.log('this form',this)
        formData = {
          username: username.value,
          email: email.value,
          password: password.value,
          cpassword: cpassword.value
        }
        signupFormSubmit(formData);
        // signupForm.reset();
      }
    });
  
    function setError(input, message, className) {
      inputElement = input.closest(className);
      span = inputElement.querySelector('span');
      span.textContent = message;
      span.classList.add('error-msg');
      input.classList.remove('success-msg');
      input.classList.add('error-msg');
    }
  
    function setSuccess(input, className) {
      inputElement = input.closest(className);
      span = inputElement.querySelector('span');
      span.textContent = "";
      span.classList.remove('error-msg');
      input.classList.remove('error-msg');
      input.classList.add('success-msg');
    }
  
  
    const signupFormSubmit = async (form) => {
      try {
        const response = await fetch(`${PROJECT_ROOT}auth/signup`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(form)
        });
        if (!response.ok) {
          throw new Error('Something went wrong');
          console.log(response);
        }
        const statusCode = response.status;
        const data = await response.json();
        const errorMessage = document.querySelector('#signup-form .errorMessage');
        const successMessage = document.querySelector('#signup-form .successMessage');
        errorMessage.textContent = "";
        successMessage.textContent = "";
        if (statusCode !== 201) {
          errorMessage.textContent = data[0].msg;
          // setTimeout(() => {
          //   errorMessage.textContent = "";
          // }, 2000)
        } else {
          // formModelReset();
          successMessage.textContent = data.message;
          setTimeout(() => {
            successMessage.textContent = "";
            signupForm.reset();
          }, 2000)
  
        }
        console.log('data', data);
      } catch (error) {
        console.log('error', error)
      }
    }
    const loginFormSubmit = async (form) => {
      try {
        const sessionID=localStorage.getItem('sessionID');
        // form.sessionID;
        form.sessionID=sessionID??null;
        
        console.log(form,'form');
        
        const response = await fetch(`${PROJECT_ROOT}auth/login`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(form)
        });
        console.log('response', response)
        if (!response.ok) {
          throw new Error('Something went wrong');
          console.log(response);
        }
        const data = await response.json();
        const errorMessage = document.querySelector('#login-form .errorMessage');
        const successMessage = document.querySelector('#login-form .successMessage');
        errorMessage.textContent = "";
        successMessage.textContent = "";
        if (data.status !== 200) {
          errorMessage.textContent = Array.isArray(data) && data[0]?.msg ? data[0].msg : data.message;
  
          setTimeout(() => {
            errorMessage.textContent = "";
          }, 2000);
          // console.log(data.message,'message');
        } else {

            console.log('here are coming');
            
          localStorage.removeItem('sessionID');
          successMessage.textContent = data.message;
          setTimeout(() => {
            formModelReset();
            successMessage.textContent = "";
            loginForm.reset();
            window.location.reload();
          }, 2000)
        }
      } 
      catch (error) {
        console.log('error', error)
      }
    }
    if(logoutBtn){

        logoutBtn.addEventListener('click',(e)=>{
          e.preventDefault();
          logoutSubmit();
        })
    }
    const logoutSubmit = async (form) => {
      try {
        const response = await fetch(`${PROJECT_ROOT}auth/logout`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          }
        });
        console.log('response', response)
        if (!response.ok) {
          throw new Error('Something went wrong');
          console.log(response);
        }
        const data = await response.json();
        if (data.status !== 200) {
        } else {
          localStorage.clear();
          window.location.reload();
        }
      } 
      catch (error) {
        console.log('error', error)
      }
    }
  
    function setupTogglePassword(toggleButtonId, passwordInput) {
    const toggleButton = document.getElementById(toggleButtonId);
    toggleButton.addEventListener('click', () => {
      const eyeFill = toggleButton.querySelector('.eye-fill');
      const eyeSlashFill = toggleButton.querySelector('.eye-slash-fill');
      const isPasswordVisible = eyeFill.classList.toggle('active');
  
      passwordInput.type = isPasswordVisible ? 'password' : 'text';
      eyeSlashFill.classList.toggle('active');
    });
  }
  
  setupTogglePassword('togglePassword', logpassword);
  setupTogglePassword('togglePassword1', password);
  setupTogglePassword('togglePassword2', cpassword);
  
  </script>
  
</html>